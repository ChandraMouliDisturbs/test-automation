from defusedxml import ElementTree\nimport operator\nfrom functools import reduce\nimport os\nfrom staxrail.testrail import TestRailAPI\n\ndef prod(vals):\n\treturn reduce(operator.mul, vals, 1)\n\ndef find_test_id(case_id, tests):\n\ttry:\n\t\t case = case_id if type(case_id) is int else int(case_id)\n\texcept ValueError:\n\t\tprint('Case "%s" is not a valid case ID.' % case_id)\n\t\treturn -1\n\tfor test in tests:\n\t\tif case == test['case_id']:\n\t\t\treturn test['id']\n\treturn -1\n\ndef get_status(string):\n\tif string == 'passed':\n\t\treturn TestRailAPI.PASSED\n\telif string == 'failure':\n\t\treturn TestRailAPI.FAILED\n\treturn TestRailAPI.UNTESTED\n\ndef get_time_string(time):\n\tto_string = ''\n\tnew_time = int(float(time))\n\tif new_time <= 0:\n\t\treturn '1s'\n\thours = int(new_time / 3600)\n\tnew_time = new_time - prod([hours, 3600])\n\tminutes = int(new_time / 60)\n\tnew_time = new_time - prod([minutes, 60])\n\tseconds = int(new_time)\n\tif hours > 0:\n\t\tto_string += '%sh ' % hours\n\t\tif minutes == 0 and seconds == 0:\n\t\t\treturn to_string[:-1]\n\tif minutes > 0:\n\t\tto_string += '%sm ' % minutes\n\t\tif seconds == 0:\n\t\t\treturn to_string[:-1]\n\treturn to_string + '%ss' % seconds\n\npath = './'\nfile = path + 'result.xml'\nrun = os.environ['RUNID']\ntree = ElementTree.parse(file)\nroot = tree.getroot()\ntr = TestRailAPI(url='https://openstax.testrail.net/')\ntest_set = tr.get_tests(run_id=int(run))\nfor child in root:\n\tchild.attrib['case'] = child.attrib['name'].split('_')[-1]\n\tchild.attrib['test'] = find_test_id(child.attrib['case'], test_set)\n\tsub = list(child.iter())\n\tif len(sub) >= 2:\n\t\tchild.attrib['status'] = sub[1].tag\n\t\tchild.attrib['message'] = sub[1].attrib['message']\n\t\tchild.attrib['text'] = sub[1].text\n\telse:\n\t\tchild.attrib['status'] = 'passed'\n\t\tchild.attrib['message'] = ''\n\t\tchild.attrib['text'] = ''\n\nresults = []\nfor child in root:\n\tif child.attrib['status'] != 'skipped':\n\t\tresults.append({\n\t\t\t'test_id': child.attrib['test'],\n\t\t\t'status_id': get_status(child.attrib['status']),\n\t\t\t'comment': '{0}{1}'.format(child.attrib['message'], child.attrib['text']),\n\t\t\t'version': '',\n\t\t\t'elapsed': get_time_string(child.attrib['time']),\n\t\t\t'defects': '',\n\t\t\t'assignedto_id': '',\n\t\t})\npackage = tr.add_results(run_id=int(run), data={'results': results})
